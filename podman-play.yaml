---
apiVersion: v1
kind: Pod
metadata:
  name: config-server
  labels:
    app: ijp
spec:
  containers:
  - name: config-server
    image: ghcr.io/internal-job-portal/config-server:latest
    ports:
    - containerPort: 8888
      hostPort: 8888
    env:
    - name: TZ
      value: ${TZ}
    - name: SERVER_PORT
      value: ${CONFIG_SERVER_PORT}
    - name: SERVER_URL
      value: ${CONFIG_SERVER_URL}
    - name: PROFILE
      value: ${CONFIG_PROFILE}
    - name: GIT_URI
      value: ${CONFIG_GIT_URI}
    readinessProbe:
      httpGet:
        path: /actuator/health
        port: 8888
      initialDelaySeconds: 10
      periodSeconds: 10
      timeoutSeconds: 5
      failureThreshold: 5
    hostname: config-server
---
apiVersion: v1
kind: Pod
metadata:
  name: zookeeper
  labels:
    app: ijp
spec:
  containers:
  - name: zookeeper
    image: docker.io/confluentinc/cp-zookeeper:latest
    ports:
    - containerPort: 2181
      hostPort: 22181
    env:
    - name: ZOOKEEPER_CLIENT_PORT
      value: "2181"
    - name: ZOOKEEPER_TICK_TIME
      value: "2000"
---
apiVersion: v1
kind: Pod
metadata:
  name: kafka
  labels:
    app: ijp
spec:
  containers:
  - name: kafka
    image: docker.io/confluentinc/cp-kafka:latest
    ports:
    - containerPort: 29092
      hostPort: 29092
    env:
    - name: KAFKA_BROKER_ID
      value: "1"
    - name: KAFKA_ZOOKEEPER_CONNECT
      value: "zookeeper:2181"
    - name: KAFKA_ADVERTISED_LISTENERS
      value: "PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092"
    - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
      value: "PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT"
    - name: KAFKA_INTER_BROKER_LISTENER_NAME
      value: "PLAINTEXT"
    - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
      value: "1"
---
apiVersion: v1
kind: Pod
metadata:
  name: api-gateway
  labels:
    app: ijp
spec:
  containers:
  - name: api-gateway
    image: ghcr.io/internal-job-portal/api-gateway:latest
    ports:
    - containerPort: 8080
      hostPort: 8080
    env:
    - name: TZ
      value: ${TZ}
    - name: SERVER_PORT
      value: ${API_GATEWAY_PORT}
    - name: CONFIG_SERVER_URL
      value: ${CONFIG_SERVER_URL}
    - name: JWT_SECRET
      value: ${JWT_SECRET}
    - name: JWT_EXPIRATION
      value: ${JWT_EXPIRATION}
    - name: LOGIN_SERVICE_URI
      value: ${LOGIN_SERVICE_URI}
    - name: HR_SERVICE_URI
      value: ${HR_SERVICE_URI}
    - name: JOB_SERVICE_URI
      value: ${JOB_SERVICE_URI}
    - name: CANDIDATE_SERVICE_URI
      value: ${CANDIDATE_SERVICE_URI}
    - name: EMPLOYEE_SERVICE_URI
      value: ${EMPLOYEE_SERVICE_URI}
    readinessProbe:
      httpGet:
        path: /actuator/health
        port: 8080
      initialDelaySeconds: 10
      periodSeconds: 10
      timeoutSeconds: 5
      failureThreshold: 5
---
apiVersion: v1
kind: Pod
metadata:
  name: login-service
  labels:
    app: ijp
spec:
  containers:
  - name: login-service
    image: ghcr.io/internal-job-portal/login-service:latest
    ports:
    - containerPort: 8081
      hostPort: 8081
    env:
    - name: TZ
      value: ${TZ}
    - name: SERVER_PORT
      value: ${LOGIN_SERVICE_PORT}
    - name: CONFIG_SERVER_URL
      value: ${CONFIG_SERVER_URL}
    - name: LOGIN_SERVICE_URI
      value: ${LOGIN_SERVICE_URI}
    - name: HR_SERVICE_URI
      value: ${HR_SERVICE_URI}
    - name: EMPLOYEE_SERVICE_URI
      value: ${EMPLOYEE_SERVICE_URI}
---
apiVersion: v1
kind: Pod
metadata:
  name: hr-service
  labels:
    app: ijp
spec:
  containers:
  - name: hr-service
    image: ghcr.io/internal-job-portal/hr-service:latest
    ports:
    - containerPort: 8082
      hostPort: 8082
    env:
    - name: TZ
      value: ${TZ}
    - name: PROFILE
      value: ${PROFILE}
    - name: SERVER_PORT
      value: ${HR_SERVICE_PORT}
    - name: CONFIG_SERVER_URL
      value: ${CONFIG_SERVER_URL}
    - name: DB_NAME
      value: ${HR_DB_NAME}
    - name: DB_HOST
      value: ${DB_HOST}
    - name: DB_PORT
      value: ${DB_PORT}
    - name: POSTGRES_USERNAME
      value: ${POSTGRES_USERNAME}
    - name: POSTGRES_PASSWORD
      value: ${POSTGRES_PASSWORD}
    - name: H2_USERNAME
      value: ${H2_USERNAME}
    - name: H2_PASSWORD
      value: ${H2_PASSWORD}
    - name: KAFKA_BOOTSTRAP_SERVERS
      value: ${KAFKA_BOOTSTRAP_SERVERS}
    - name: HR_SERVICE_URI
      value: ${HR_SERVICE_URI}
---
apiVersion: v1
kind: Pod
metadata:
  name: job-service
  labels:
    app: ijp
spec:
  containers:
  - name: job-service
    image: ghcr.io/internal-job-portal/job-service:latest
    ports:
    - containerPort: 8083
      hostPort: 8083
    env:
    - name: TZ
      value: ${TZ}
    - name: PROFILE
      value: ${PROFILE}
    - name: SERVER_PORT
      value: ${JOB_SERVICE_PORT}
    - name: CONFIG_SERVER_URL
      value: ${CONFIG_SERVER_URL}
    - name: DB_NAME
      value: ${JOB_DB_NAME}
    - name: DB_HOST
      value: ${DB_HOST}
    - name: DB_PORT
      value: ${DB_PORT}
    - name: POSTGRES_USERNAME
      value: ${POSTGRES_USERNAME}
    - name: POSTGRES_PASSWORD
      value: ${POSTGRES_PASSWORD}
    - name: H2_USERNAME
      value: ${H2_USERNAME}
    - name: H2_PASSWORD
      value: ${H2_PASSWORD}
    - name: JOB_SERVICE_URI
      value: ${JOB_SERVICE_URI}
    - name: CANDIDATE_SERVICE_URI
      value: ${CANDIDATE_SERVICE_URI}
---
apiVersion: v1
kind: Pod
metadata:
  name: candidate-service
  labels:
    app: ijp
spec:
  containers:
  - name: candidate-service
    image: ghcr.io/internal-job-portal/candidate-service:latest
    ports:
    - containerPort: 8084
      hostPort: 8084
    env:
    - name: TZ
      value: ${TZ}
    - name: PROFILE
      value: ${PROFILE}
    - name: SERVER_PORT
      value: ${CANDIDATE_SERVICE_PORT}
    - name: CONFIG_SERVER_URL
      value: ${CONFIG_SERVER_URL}
    - name: DB_NAME
      value: ${CANDIDATE_DB_NAME}
    - name: DB_HOST
      value: ${DB_HOST}
    - name: DB_PORT
      value: ${DB_PORT}
    - name: POSTGRES_USERNAME
      value: ${POSTGRES_USERNAME}
    - name: POSTGRES_PASSWORD
      value: ${POSTGRES_PASSWORD}
    - name: H2_USERNAME
      value: ${H2_USERNAME}
    - name: H2_PASSWORD
      value: ${H2_PASSWORD}
    - name: KAFKA_BOOTSTRAP_SERVERS
      value: ${KAFKA_BOOTSTRAP_SERVERS}
    - name: CANDIDATE_SERVICE_URI
      value: ${CANDIDATE_SERVICE_URI}
---
apiVersion: v1
kind: Pod
metadata:
  name: employee-service
  labels:
    app: ijp
spec:
  containers:
  - name: employee-service
    image: ghcr.io/internal-job-portal/employee-service:latest
    ports:
    - containerPort: 8085
      hostPort: 8085
    env:
    - name: TZ
      value: ${TZ}
    - name: PROFILE
      value: ${PROFILE}
    - name: SERVER_PORT
      value: ${EMPLOYEE_SERVICE_PORT}
    - name: CONFIG_SERVER_URL
      value: ${CONFIG_SERVER_URL}
    - name: DB_NAME
      value: ${EMPLOYEE_DB_NAME}
    - name: DB_HOST
      value: ${DB_HOST}
    - name: DB_PORT
      value: ${DB_PORT}
    - name: POSTGRES_USERNAME
      value: ${POSTGRES_USERNAME}
    - name: POSTGRES_PASSWORD
      value: ${POSTGRES_PASSWORD}
    - name: H2_USERNAME
      value: ${H2_USERNAME}
    - name: H2_PASSWORD
      value: ${H2_PASSWORD}
    - name: EMPLOYEE_SERVICE_URI
      value: ${EMPLOYEE_SERVICE_URI}
---
apiVersion: v1
kind: Pod
metadata:
  name: frontend
  labels:
    app: ijp
spec:
  containers:
  - name: frontend
    image: ghcr.io/internal-job-portal/frontend:latest
    ports:
    - containerPort: 80
      hostPort: 80
    env:
    - name: TZ
      value: ${TZ}